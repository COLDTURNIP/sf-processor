- macro: mkdir
  condition: (evt.type=mkdir or evt.type=mkdirat)

- macro: rmdir
  condition: evt.type=rmdir

- macro: link
  condition: (evt.type=link or evt.type=linkat)

- macro: symlink
  condition: (evt.type=symlink or evt.type=symlinkat)

- macro: save
  condition:  (evt.type=open or evt.type=openat) and evt.is_open_write=true

- macro: read
  condition:  (evt.type=open or evt.type=openat) and evt.is_open_write=false

- macro: rename
  condition: evt.type=rename

- macro: delete
  condition: (evt.type=unlink or evt.type=unlinkat)

- list: include_dirs
  items: ["/"]

- macro: is_in_include_dirs
  condition: (fd.name pmatch (include_dirs) or fd.directory pmatch (include_dirs) or evt.arg.name pmatch (include_dirs)) or ((evt.type=mkdir or evt.type=open or evt.type=openat or evt.type=rmdir or evt.type=unlink or evt.type=unlinkat or evt.type=rename) and proc.cwd pmatch (include_dirs))

- list: exclude_dirs
  items: ["/dev/null", "/dev/tty", "/dev/shm", "/proc/sys", "/var/lib/docker"]

- macro: is_not_exclude_ns
  condition: not (k8s.ns.name pmatch (exclude_namespaces))

- list: include_namespaces
  items: [] #{{ .Values.mappCrawlerConfig.includeNamespaces }}

- macro: all_namespace
  condition: evt.type exists

- macro: specify_namespace
  condition: k8s.ns.name pmatch (include_namespaces)

- macro: is_include_ns
  condition: 1 = 1 #{{ .Values.mappCrawlerConfig.namespaceRuleMacro }}

- macro: is_not_in_exclude_dirs
  condition: not (fd.name pmatch (exclude_dirs) or fd.directory pmatch (exclude_dirs) or evt.arg.name pmatch (exclude_dirs)  or evt.arg.path pmatch (exclude_dirs) or evt.arg.oldpath pmatch (exclude_dirs) or evt.arg.newpath pmatch (exclude_dirs) or proc.cwd pmatch (exclude_dirs))

- macro: is_not_host_or_origin
  condition: not (container.name=host or container.name=origin)

- macro: k8s_pod_name_exists
  condition: k8s.pod.name!=null

- list: all_types
  items: [rename, linkat, setpgid, creat, syscall, notification, signalfd, inotify_init, accept, symlinkat, connect, flock, k8s, open, prlimit, pipe, chroot, container, mesos, sysdigevent, quotactl, mkdir, tkill, setsid, recvmsg, rmdir, setgid, cpu_hotplug, dup, setns, socketpair, listen, fork, tgkill, openat, clone, setresgid, symlink, infra, ioctl, link, ptrace, fchdir, unshare, seccomp, unlink, execve, renameat, procexit, setsockopt, chdir, socket, bpf, bind, mount, drop, umount, mkdirat, recvfrom, setuid, setresuid, sendto, unlinkat, kill, tracer, sendmsg, vfork]

- macro: is_valid_type
  condition: evt.type in ( all_types )

- macro: is_not_mapp_crawler
  condition: container.image.repository!="falcosecurity/falco" and container.image.repository!="fluentd-python"

- macro: mapp_file_rule
  condition: (mkdir or rmdir or link or save or rename or delete) and is_not_host_or_origin and is_not_in_exclude_dirs and is_include_ns and is_not_exclude_ns and k8s_pod_name_exists

- list: process_event_types
  items: [execve, kill]

- macro: is_process_event
  condition: evt.type in (process_event_types)

- macro: mapp_process_rule
  condition: evt.type in (process_event_types) and is_not_host_or_origin and is_include_ns and is_not_exclude_ns and k8s_pod_name_exists

- macro: mapp_basic_rule
  condition: (mapp_file_rule) or (mapp_process_rule)

- rule: Write below Working dir
  desc: an attempt to write to any file under the Working directory
  condition: (mapp_basic_rule) or proc.name contains client
  output: 'File below WP $idir is accessed (fd.cip.name=%fd.cip.name fd.sip.name=%fd.sip.name evt.arg.fd=%evt.arg.fd.name user_id=%user.uid user_name=%user.name user_home=%user.homedir user_shell=%user.shell user_login_id=user.loginuid user_login_name=%user.loginname group_id=%group.gid group_name=%group.name proc_pid=%proc.pid proc_name=%proc.name proc_ppid=%proc.ppid proc_pname=%proc.pname proc_sid=%proc.sid proc_sname=%proc.sname proc_apid[2]=%proc.apid[2] proc_apid[3]=%proc.apid[3] proc_apid[4]=%proc.apid[4] proc_apid[5]=%proc.apid[5] proc_aname[2]=%proc.aname[2] proc_aname[3]=%proc.aname[3] proc_aname[4]=%proc.aname[4] proc_aname[5]=%proc.aname[5] proc_vpid=%proc.vpid proc_vpgid=%proc.vpgid proc_loginshellid=%proc.loginshellid thread_ismain=%thread.ismain proc_exe=%proc.exe command=%proc.cmdline pcommand=%proc.pcmdline cwd=%proc.cwd file=%fd.name directory=%fd.directory evt_type=%evt.type evt_category=%evt.category evt_is_io=%evt.is_io open_read=%evt.is_open_read open_write=%evt.is_open_write args=%evt.args arg_name=%evt.arg.name arg_path=%evt.arg.path arg_oldpath=%evt.arg.oldpath arg_newpath=%evt.arg.newpath res=%evt.res info=%evt.info time=%evt.time evt_failed=%evt.failed cont_id=%container.id cont_name=%container.name cont_type=%container.type cont_privilage=%container.privileged cont_img_id=%container.image.id cont_img_repo=%container.image.repository cont_img_tag=%container.image.tag cont_img_digest=%container.image.digest)'
  #action: [alert]
  priority: high
#   enabled: "true"
#   warn_evttypes: "true"
#   skip-if-unknown-filter: "true"
#   tags: [mitre:T1234]
  
  
